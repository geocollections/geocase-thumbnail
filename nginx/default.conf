 # - levels: nestiness of cache directories, ie /cache/c/29/b7f54b2df7773722d382f4809d65029c
    # - keys_zone: named memory structure to hold keys, 1 MB allows to store around 8 thousand keys.
    # - max_size: max size of cache entries on disk.
    # â€” inactive: amount of time a key/value pair can live in cache (even if it was accessed recently).
    # - use_temp_path: on/off to use nginx configured tmp directory.
    proxy_cache_path /opt/nginx-proxy-cache/ levels=1:2 keys_zone=proxy_cache_zone:10m max_size=50g inactive=1y use_temp_path=off;
    fastcgi_cache_path /opt/nginx-fcgi-cache/ levels=1:2 keys_zone=fcgi_cache_zone:10m max_size=50g inactive=1y use_temp_path=off;

    server {

      

        listen 80;
        index index.php index.html;

        root /etc/nginx/html/;

        # Caching setup is quite aggressive, we assume MyService to be append-only.
        proxy_cache proxy_cache_zone;

        # Cache authenticated requests by making basic auth `Authorization` header part of a cache key.
        proxy_cache_key "$args";
        
        
        proxy_cache_methods GET HEAD;

        # Cache `200` responses for 24 hours.
        proxy_cache_valid 200 1y;

        # Cache `404` responses for 10 minutes, 404 might be resolved to 200 later.
        proxy_cache_valid 404 1s;

        # Allow parallel cache update while we serve stale cache entry.
        proxy_cache_background_update on;

        # Return cache if upstream is down or Nginx is updating the cache atm.
        proxy_cache_use_stale timeout updating http_500 http_502 http_503 http_504;

        proxy_read_timeout 10s;
        proxy_connect_timeout 1s;

        fastcgi_cache_key "$args";
        fastcgi_cache fcgi_cache_zone;
        fastcgi_cache_valid 200 1y;
        fastcgi_cache_valid 404 1s;
        
        index           index.php index.html;
        fastcgi_index   index.php;

        # h2non imaginary endpoints
        location ~ /(health|form|info|crop|smartcrop|resize|enlarge|extract|zoom|thumbnail|fit|rotate|autorotate|flip|flop|convert|pipeline|watermark|watermarkimage|blur)$ {
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers Expires;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_cache_bypass $http_cachepurge;
            proxy_pass http://imaginary:9000;
            
        } 


        location ~ /(purge)$ {

            set $cmd "rm ";
            set $ops "-rf";
            set $path $cmd$ops/opt/nginx-fcgi-cache/*;
            
            content_by_lua_block {
                os.execute('/bin/remove-cache-by-key.sh' .. npx.var.args )
            }
            # .. npx.vars.args
            #content_by_lua_block {
            #    os.execute('rm -rf /opt/nginx-fcgi-cache/*')
            #}
            #try_files $uri $uri/ /index.php$is_args$args;
            
        }
       
        # Everything else redirects to index.php, which is our image-proxy
        location /  {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_hide_header X-Powered-By;
            add_header X-FastCGI-Cache $upstream_cache_status;
            fastcgi_cache_bypass $http_cachepurge;
            fastcgi_pass php:9000;          
        }
    }

